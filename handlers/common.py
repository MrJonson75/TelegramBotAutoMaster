from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, FSInputFile
from config import get_photo_path, MESSAGES
from keyboards.main_kb import Keyboards
from utils.service_utils import send_message, setup_logger
from utils import delete_previous_message
from typing import Optional

logger = setup_logger(__name__)
common_router = Router()

async def send_message_with_cleanup(
    message: Message,
    text: str,
    photo_path: Optional[str] = None,
    reply_markup: Optional[InlineKeyboardMarkup] = None
) -> bool:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É–¥–∞–ª–µ–Ω–∏–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º."""
    try:
        await delete_previous_message(message)
        if photo_path:
            sent_message = await send_message(
                message.bot, str(message.chat.id), "photo",
                text, photo=photo_path, reply_markup=reply_markup
            )
            return bool(sent_message)
        sent_message = await send_message(
            message.bot, str(message.chat.id), "text",
            text, reply_markup=reply_markup
        )
        logger.debug(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {text[:50]}...")
        return bool(sent_message)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {str(e)}")
        await message.answer(
            "üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
            parse_mode="HTML",
            reply_markup=Keyboards.main_menu_kb()
        )
        return False

@common_router.message(Command("start"))
async def cmd_start(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –≤—ã–ø–æ–ª–Ω–∏–ª –∫–æ–º–∞–Ω–¥—É /start")
    await send_message_with_cleanup(
        message,
        f"<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>\n{MESSAGES['welcome']} üöó",
        photo_path=get_photo_path("welcome"),
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–ù–∞—á–∞—Ç—å –≤ –º–µ–Ω—é ‚¨Ö", callback_data="back_to_main")]
        ])
    )

@common_router.message(F.text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã/–∫–∞–∫ –ø—Ä–æ–µ—Ö–∞—Ç—å")
async def show_contacts(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è 'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã/–∫–∞–∫ –ø—Ä–æ–µ—Ö–∞—Ç—å'."""
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª –∫–æ–Ω—Ç–∞–∫—Ç—ã")
    await send_message_with_cleanup(
        message,
        f"<b>–ö–æ–Ω—Ç–∞–∫—Ç—ã –∏ –ø—Ä–æ–µ–∑–¥</b>\n{MESSAGES['contacts']} üìç",
        photo_path=get_photo_path("contacts"),
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é ‚¨Ö", callback_data="back_to_main")]
        ])
    )

@common_router.message(F.text == "–û –º–∞—Å—Ç–µ—Ä–µ")
async def cmd_about_master(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è '–û –º–∞—Å—Ç–µ—Ä–µ'."""
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞—Å—Ç–µ—Ä–µ")
    response = (
        f"<b>–û –º–∞—Å—Ç–µ—Ä–µ üöó</b>\n"
        f"–£–∑–Ω–∞–π—Ç–µ –±–æ–ª—å—à–µ –æ –Ω–∞—à–µ–º –º–∞—Å—Ç–µ—Ä–µ –∏ –µ–≥–æ —Ä–∞–±–æ—Ç–µ!\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:"
    )

    await send_message_with_cleanup(
        message,
        response,
        photo_path=get_photo_path("about_master"),
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(text="üìú –ù–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ", callback_data="master_about"),
                    InlineKeyboardButton(text="‚≠ê –õ–µ–Ω—Ç–∞ –æ—Ç–∑—ã–≤–æ–≤", callback_data="master_reviews"),
                ],
                [InlineKeyboardButton(text="üü¢ –ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç", callback_data="master_works")],
                [InlineKeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_main")]
            ]
        )
    )