from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder
import config

def main_menu_kb() -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏:
    - –û –º–∞—Å—Ç–µ—Ä–µ
    - –£—Å–ª—É–≥–∏ –∏ —Ü–µ–Ω—ã
    - –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ —Ñ–æ—Ç–æ
    - –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–∏–µ–º
    - –ú–æ–∏ –∑–∞–ø–∏—Å–∏
    - –ö–æ–Ω—Ç–∞–∫—Ç—ã
    - –ë—ã—Å—Ç—Ä—ã–π –≤–æ–ø—Ä–æ—Å
    """
    builder = ReplyKeyboardBuilder()

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ 2 –∫–æ–ª–æ–Ω–∫–∏
    builder.row(
        KeyboardButton(text="üìã –û –º–∞—Å—Ç–µ—Ä–µ"),
        KeyboardButton(text="üîß –£—Å–ª—É–≥–∏ –±–µ–∑ –∑–∞–ø–∏—Å–∏")
    )
    builder.row(
        KeyboardButton(text="üñº –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ —Ñ–æ—Ç–æ"),
        KeyboardButton(text="üóì –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–∏–µ–º")
    )
    builder.row(
        KeyboardButton(text="‚úè –ú–æ–∏ –∑–∞–ø–∏—Å–∏"),
        KeyboardButton(text="üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã/–∫–∞–∫ –ø—Ä–æ–µ—Ö–∞—Ç—å")
    )
    builder.row(
        KeyboardButton(text="‚ùì –ë—ã—Å—Ç—Ä—ã–π –≤–æ–ø—Ä–æ—Å")
    )

    return builder.as_markup(
        resize_keyboard=True,
        one_time_keyboard=True,  # –ú–µ–Ω—é —Å–∫—Ä–æ–µ—Ç—Å—è –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ..."
    )


def services_menu_kb(services: list[str]) -> InlineKeyboardMarkup:
    """
    –ò–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –ø–µ—Ä–µ—á–Ω–µ–º —É—Å–ª—É–≥
    :param services: —Å–ø–∏—Å–æ–∫ —É—Å–ª—É–≥ –∏–∑ –ë–î/–∫–æ–Ω—Ñ–∏–≥–∞
    :return: InlineKeyboardMarkup
    """
    builder = InlineKeyboardBuilder()

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —É—Å–ª—É–≥ —Å callback-–¥–∞–Ω–Ω—ã–º–∏
    for service in services:
        builder.add(InlineKeyboardButton(
            text=service,
            callback_data=f"service_{service}"  # –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ID —É—Å–ª—É–≥–∏
        ))

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    builder.row(InlineKeyboardButton(
        text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
        callback_data="back_to_main"
    ))

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫ (–ø–æ 2 –≤ —Ä—è–¥—É)
    builder.adjust(2)

    return builder.as_markup()


def services_kb() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    for service_name in config.SERVICES.keys():
        builder.button(
            text=service_name,
            callback_data=f"service_detail:{service_name}"
        )
    builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")
    builder.adjust(1)
    return builder.as_markup()

def service_actions_kb(service_name: str) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.button(
        text="üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è",
        callback_data=f"service_book:{service_name}"
    )
    builder.button(
        text="‚ÑπÔ∏è –ü–æ–¥—Ä–æ–±–Ω–µ–µ",
        callback_data=f"service_info:{service_name}"
    )
    builder.button(
        text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É—Å–ª—É–≥–∞–º",
        callback_data="back_to_services"
    )
    builder.adjust(1)
    return builder.as_markup()

